import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as l}from"./app-BB9yMBkN.js";const t={};function e(h,i){return l(),a("div",null,i[0]||(i[0]=[n(`<h1 id="cmake相关" tabindex="-1"><a class="header-anchor" href="#cmake相关"><span>CMake相关</span></a></h1><h2 id="编译器" tabindex="-1"><a class="header-anchor" href="#编译器"><span>编译器</span></a></h2><ol><li><p>Windows下cmake主要使用msvc编译器来编译，Linux下主要使用gcc/g++编译器来编译</p></li><li><p>Windows下cmake需要使用-G指定生成器类型，生成器类型会绑定对应的编译器</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Visual Studio 17 2022 生成器强制使用 MSVC，无需显式指定路径</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -G</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Visual Studio 17 2022&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -A</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Win32</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -T</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;v142,version=14.25&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ..</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># MinGW Makefiles 生成器需依赖 MinGW 的 gcc/g++，且环境变量必须正确配置</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -G</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;MinGW Makefiles&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DCMAKE_C_COMPILER=C:/mingw64/bin/gcc.exe</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DCMAKE_CXX_COMPILER=C:/mingw64/bin/g++.exe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ..</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>​ Linux默认选择gcc/g++编译器编译</p><h2 id="cmake常用变量" tabindex="-1"><a class="header-anchor" href="#cmake常用变量"><span>CMake常用变量</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PROJECT_NAME</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 通过project()指定项目名称</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PROJECT_SOURCE_DIR</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 工程的根目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PROJECT_BINARY_DIR</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 执行cmake命令的目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMAKE_CURRENT_SOURCE_DIR</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 当前CMakeList.txt文件所在的目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMAKE_CURRENT_BINARY_DIR</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 编译目录，可使用 add subdirectory 来修改</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">EXECUTABLE_OUTPUT_PATH</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 二进制可执行文件输出位置</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">LIBRARY_OUTPUT_PATH</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 库文件输出位置</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">BUILD_SHARED_LIBS</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 默认的库编译方式 ( shared 或 static ) ，默认为 static</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMAKE_C_FLAGS</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 设置 C 编译选项</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMAKE_CXX_FLAGS</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 设置 C++ 编译选项</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMAKE_CXX_FLAGS_DEBUG</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 设置编译类型 Debug 时的编译选项</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMAKE_CXX_FLAGS_RELEASE</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 设置编译类型 Release 时的编译选项</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMAKE_GENERATOR</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 编译器名称</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMAKE_COMMAND</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# CMake 可执行文件本身的全路径</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMAKE_BUILD_TYPE</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 工程编译生成的版本， Debug / Release</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMAKE_CXX_STANDARD</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# C++标准</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMAKE_UNITY_BUILD</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 设置开启元编译，于CMAKE_UNITY_BUILD_BATCH_SIZE配合使用，用于加速项目编译速度。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">EXECUTABLE_OUTPUT_PATH</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 设置可执行程序输出路径</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">LIBRARY_OUTPUT_PATH</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 设置库文件输出路径（包括动态库静态库）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMAKE_LIBRARY_OUTPUT_DIRECTORY</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 现代版-设置动态库输出路径</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMAKE_ARCHIVE_OUTPUT_DIRECTORY</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 现代版-设置静态库输出路径</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMAKE_RUNTIME_OUTPUT_DIRECTORY</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 现代版-设置可执行程序输出路径(windows还可以同时控制动态库dll)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cmake常用命令" tabindex="-1"><a class="header-anchor" href="#cmake常用命令"><span>CMake常用命令</span></a></h2><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()	</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 生成可执行程序</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()	</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 生成库文件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(mylib SHARED </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;main.cpp&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)	</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 生成动态库</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(mylib STATIC </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;main.cpp&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)	</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 生成静态库</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加头文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 为指定的目标添加头文件-需要在add_executable或add_library之后使用</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_definitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()	</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加预定义</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	add_definitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(-DUNICODE -D_UNICODE)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># windows下静态链接运行时库</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_CXX_FLAGS_DEBUG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;\${CMAKE_CXX_FLAGS_DEBUG} /MTd&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_CXX_FLAGS_RELEASE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;\${CMAKE_CXX_FLAGS_RELEASE} /MT&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_C_FLAGS_DEBUG </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${CMAKE_C_FLAGS_DEBUG} /MTd&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_C_FLAGS_RELEASE </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${CMAKE_C_FLAGS_RELEASE} /MT&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># windows下release编译时生成pdb符号文件, 并且生成文件时加入调试信息，便于后续windbg调试</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_CXX_FLAGS_RELEASE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;\${CMAKE_CXX_FLAGS_RELEASE} /Zi /Od&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># /Zi生成pdb文件 /Od禁用所有代码优化</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_EXE_LINKER_FLAGS_RELEASE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;\${CMAKE_EXE_LINKER_FLAGS_RELEASE} /DEBUG /OPT:REF /OPT:ICF&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)	</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 告诉链接器生成exe时加入调试信息</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_SHARED_LINKER_FLAGS_RELEASE </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /DEBUG /OPT:REF /OPT:ICF&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 告诉链接器生成dll时加入调试信息</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># windows下忽略库MSVCRT</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_SHARED_LINKER_FLAGS_RELEASE </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/NODEFAULTLIB:MSVCRT.lib \${CMAKE_SHARED_LINKER_FLAGS_RELEASE}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_SHARED_LINKER_FLAGS_DEBUG </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/NODEFAULTLIB:MSVCRTD.lib \${CMAKE_SHARED_LINKER_FLAGS_DEBUG}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># windows下设置版本信息</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">https://github.com/halex2005/CMakeHelpers</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># windows下取消生成清单</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_EXE_LINKER_FLAGS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;\${CMAKE_EXE_LINKER_FLAGS} /MANIFEST:NO&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_MODULE_LINKER_FLAGS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${CMAKE_MODULE_LINKER_FLAGS} /MANIFEST:NO&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_SHARED_LINKER_FLAGS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${CMAKE_SHARED_LINKER_FLAGS} /MANIFEST:NO&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 相关文件处理</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)]))}const d=s(t,[["render",e]]),A=JSON.parse('{"path":"/Study/%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/CMake%E7%9B%B8%E5%85%B3.html","title":"CMake相关","lang":"zh-CN","frontmatter":{"description":"CMake相关 编译器 Windows下cmake主要使用msvc编译器来编译，Linux下主要使用gcc/g++编译器来编译 Windows下cmake需要使用-G指定生成器类型，生成器类型会绑定对应的编译器 ​ Linux默认选择gcc/g++编译器编译 CMake常用变量 CMake常用命令","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CMake相关\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-22T17:18:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"灰灰烟影\\",\\"url\\":\\"http://hugo.work\\"}]}"],["meta",{"property":"og:url","content":"http://hugo.work/Study/%E5%B7%A5%E5%85%B7%E7%9B%B8%E5%85%B3/CMake%E7%9B%B8%E5%85%B3.html"}],["meta",{"property":"og:site_name","content":"灰灰烟影"}],["meta",{"property":"og:title","content":"CMake相关"}],["meta",{"property":"og:description","content":"CMake相关 编译器 Windows下cmake主要使用msvc编译器来编译，Linux下主要使用gcc/g++编译器来编译 Windows下cmake需要使用-G指定生成器类型，生成器类型会绑定对应的编译器 ​ Linux默认选择gcc/g++编译器编译 CMake常用变量 CMake常用命令"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-22T17:18:30.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-22T17:18:30.000Z"}]]},"git":{"createdTime":1747934310000,"updatedTime":1747934310000,"contributors":[{"name":"HooYing","username":"HooYing","email":"1161844396@qq.com","commits":1,"url":"https://github.com/HooYing"}]},"readingTime":{"minutes":2.26,"words":679},"filePathRelative":"Study/工具相关/CMake相关.md","excerpt":"","autoDesc":true}');export{d as comp,A as data};
